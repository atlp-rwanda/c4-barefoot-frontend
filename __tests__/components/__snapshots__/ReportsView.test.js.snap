// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` <ReportsView /> It should render the ReportsView compnent 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ReportsView
    category="approved"
    clearSingleRequest={[MockFunction]}
    clearUpdateTravelRequest={[MockFunction]}
    getSingleTravelRequest={[MockFunction]}
    getTravelRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    singleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    travelRequest={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "accommodationInfo": Array [
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "error": "No info on this accomodation",
              },
              Object {
                "error": "No info on this accomodation",
              },
            ],
            "travelRequestInfo": Object {
              "Trip": Array [
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Cairo",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-9ba4-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Kampala",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-4ab9-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": " Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "1a52f79e-568a-45b3-9151-4dfa40bb1217",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "aeebcf33-d125-44ce-b8c1-f5d5e8b75f13",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
              ],
              "createdAt": "2021-01-11T20:08:41.421Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "approved",
              "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
              "updatedAt": "2021-03-01T08:34:29.612Z",
              "userId": "83b2a3e7-9ba4-4d3f-b3a3-d31940ee2edc",
            },
            "userInfo": Object {
              "firstName": "Requester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "requesterOne",
            },
          },
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    updateSingleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": null,
      }
    }
    updateSingleTravelRequest={[MockFunction]}
  >
    <div
      className="makeStyles-container-1"
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <WithStyles(ForwardRef(Typography))
        component="h6"
        variant="h6"
      >
        <ForwardRef(Typography)
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="h6"
          variant="h6"
        >
          <h6
            className="MuiTypography-root MuiTypography-h6"
          >
            Direct report travel Request
          </h6>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Container))
        className="makeStyles-cardContainer-2"
        maxWidth="md"
      >
        <ForwardRef(Container)
          className="makeStyles-cardContainer-2"
          classes={
            Object {
              "disableGutters": "MuiContainer-disableGutters",
              "fixed": "MuiContainer-fixed",
              "maxWidthLg": "MuiContainer-maxWidthLg",
              "maxWidthMd": "MuiContainer-maxWidthMd",
              "maxWidthSm": "MuiContainer-maxWidthSm",
              "maxWidthXl": "MuiContainer-maxWidthXl",
              "maxWidthXs": "MuiContainer-maxWidthXs",
              "root": "MuiContainer-root",
            }
          }
          maxWidth="md"
        >
          <div
            className="MuiContainer-root makeStyles-cardContainer-2 MuiContainer-maxWidthMd"
          >
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-13"
              >
                <WithStyles(ForwardRef(Card))
                  className="makeStyles-root-3"
                >
                  <ForwardRef(Card)
                    className="makeStyles-root-3"
                    classes={
                      Object {
                        "root": "MuiCard-root",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="MuiCard-root makeStyles-root-3"
                      elevation={1}
                    >
                      <ForwardRef(Paper)
                        className="MuiCard-root makeStyles-root-3"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "outlined": "MuiPaper-outlined",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        elevation={1}
                      >
                        <div
                          className="MuiPaper-root MuiCard-root makeStyles-root-3 MuiPaper-elevation1 MuiPaper-rounded"
                        >
                          <TravelRequestCard
                            accomodationsInfo={
                              Array [
                                Object {
                                  "city": "Kigali",
                                  "country": "Rwanda",
                                  "description": "A serene environment for relaxation",
                                  "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                  "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                                  "numberOfRooms": 100,
                                  "photos": "image.png",
                                  "propertyType": "Hostel",
                                  "state": "Nyarugenge",
                                  "streetAddress": "KN 22 ST",
                                  "title": "Kigali Hostels",
                                  "typeOfBed": "Double Decker",
                                },
                                Object {
                                  "city": "Kigali",
                                  "country": "Rwanda",
                                  "description": "A serene environment for relaxation",
                                  "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                  "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                                  "numberOfRooms": 100,
                                  "photos": "image.png",
                                  "propertyType": "Hostel",
                                  "state": "Nyarugenge",
                                  "streetAddress": "KN 22 ST",
                                  "title": "Kigali Hostels",
                                  "typeOfBed": "Double Decker",
                                },
                                Object {
                                  "error": "No info on this accomodation",
                                },
                                Object {
                                  "error": "No info on this accomodation",
                                },
                              ]
                            }
                            category="approved"
                            handleSingleTravel={[Function]}
                            travel={
                              Object {
                                "Trip": Array [
                                  Object {
                                    "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "createdAt": "2021-01-11T20:08:41.427Z",
                                    "destination": "Cairo",
                                    "originCity": "Kigali",
                                    "reason": "Trippin",
                                    "returnDate": "2021-10-10T00:00:00.000Z",
                                    "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "tripDate": "2020-10-10T00:00:00.000Z",
                                    "tripId": "83b2a3e7-9ba4-3f4d-b3a3-d31940ee2edc",
                                    "updatedAt": "2021-01-11T20:08:41.427Z",
                                  },
                                  Object {
                                    "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "createdAt": "2021-01-11T20:08:41.427Z",
                                    "destination": "Kampala",
                                    "originCity": "Kigali",
                                    "reason": "Trippin",
                                    "returnDate": "2021-10-10T00:00:00.000Z",
                                    "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "tripDate": "2020-10-10T00:00:00.000Z",
                                    "tripId": "83b2a3e7-4ab9-3f4d-b3a3-d31940ee2edc",
                                    "updatedAt": "2021-01-11T20:08:41.427Z",
                                  },
                                  Object {
                                    "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                                    "createdAt": "2021-01-11T20:08:41.427Z",
                                    "destination": "Nairobi",
                                    "originCity": " Kigali",
                                    "reason": "Trippin",
                                    "returnDate": "2021-10-10T00:00:00.000Z",
                                    "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "tripDate": "2020-10-10T00:00:00.000Z",
                                    "tripId": "1a52f79e-568a-45b3-9151-4dfa40bb1217",
                                    "updatedAt": "2021-01-11T20:08:41.427Z",
                                  },
                                  Object {
                                    "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                                    "createdAt": "2021-01-11T20:08:41.427Z",
                                    "destination": "Nairobi",
                                    "originCity": "Kigali",
                                    "reason": "Trippin",
                                    "returnDate": "2021-10-10T00:00:00.000Z",
                                    "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "tripDate": "2020-10-10T00:00:00.000Z",
                                    "tripId": "aeebcf33-d125-44ce-b8c1-f5d5e8b75f13",
                                    "updatedAt": "2021-01-11T20:08:41.427Z",
                                  },
                                ],
                                "createdAt": "2021-01-11T20:08:41.421Z",
                                "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
                                "status": "approved",
                                "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                "updatedAt": "2021-03-01T08:34:29.612Z",
                                "userId": "83b2a3e7-9ba4-4d3f-b3a3-d31940ee2edc",
                              }
                            }
                            userInfo={
                              Object {
                                "firstName": "Requester",
                                "lastName": "One",
                                "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
                                "username": "requesterOne",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Grid))
                              className="makeStyles-container-14"
                              container={true}
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-container-14"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                container={true}
                              >
                                <div
                                  className="MuiGrid-root makeStyles-container-14 MuiGrid-container"
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    sm={4}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      sm={4}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-4"
                                      >
                                        <Styled(MuiBox)
                                          className="makeStyles-imageContainer-15"
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-25 makeStyles-imageContainer-15"
                                          >
                                            <img
                                              alt="request image"
                                              onError={[Function]}
                                              src="image.png"
                                              width="100%"
                                            />
                                          </div>
                                        </Styled(MuiBox)>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                  <WithStyles(ForwardRef(Grid))
                                    className="makeStyles-requestDetails-16"
                                    item={true}
                                    sm={8}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      className="makeStyles-requestDetails-16"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      sm={8}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root makeStyles-requestDetails-16 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-8"
                                      >
                                        <Styled(MuiBox)>
                                          <div
                                            className="MuiBox-root MuiBox-root-26"
                                          >
                                            <Styled(MuiBox)
                                              className="makeStyles-requesterInfo-17"
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-27 makeStyles-requesterInfo-17"
                                              >
                                                <ForwardRef(AccountCircleIcon)>
                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                    <ForwardRef(SvgIcon)
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(AccountCircleIcon)>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="makeStyles-username-18"
                                                  component="h6"
                                                  variant="h6"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-username-18"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    variant="h6"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root makeStyles-username-18 MuiTypography-h6"
                                                    >
                                                       
                                                      requesterOne
                                                       
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </Styled(MuiBox)>
                                            <Styled(MuiBox)
                                              className="makeStyles-reasonArea-19"
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-28 makeStyles-reasonArea-19"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h6"
                                                  variant="subtitle2"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    variant="subtitle2"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiTypography-subtitle2"
                                                    >
                                                       
                                                      Reason of travel
                                                       
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h6"
                                                  variant="caption"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    variant="caption"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiTypography-caption"
                                                    >
                                                      Trippin
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </Styled(MuiBox)>
                                            <Styled(MuiBox)>
                                              <div
                                                className="MuiBox-root MuiBox-root-29"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h6"
                                                  style={
                                                    Object {
                                                      "color": "#54AD7D",
                                                      "position": "absolute",
                                                      "right": "10px",
                                                      "top": "10px",
                                                    }
                                                  }
                                                  variant="caption"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    style={
                                                      Object {
                                                        "color": "#54AD7D",
                                                        "position": "absolute",
                                                        "right": "10px",
                                                        "top": "10px",
                                                      }
                                                    }
                                                    variant="caption"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiTypography-caption"
                                                      style={
                                                        Object {
                                                          "color": "#54AD7D",
                                                          "position": "absolute",
                                                          "right": "10px",
                                                          "top": "10px",
                                                        }
                                                      }
                                                    >
                                                      <n
                                                        ago={false}
                                                        calendar={false}
                                                        decimal={false}
                                                        element={null}
                                                        filter={[Function]}
                                                        format="YYYY/MM/DD"
                                                        fromNow={false}
                                                        interval={60000}
                                                        local={false}
                                                        onChange={[Function]}
                                                        titleFormat=""
                                                        toNow={false}
                                                        trim={false}
                                                        unit={null}
                                                        unix={false}
                                                        utc={false}
                                                        withTitle={false}
                                                      >
                                                        <time
                                                          dateTime={"2021-01-11T20:08:41.421Z"}
                                                        >
                                                          2021/01/11
                                                        </time>
                                                      </n>
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </Styled(MuiBox)>
                                        <Styled(MuiBox)
                                          className="makeStyles-actions-20"
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-30 makeStyles-actions-20"
                                          >
                                            <Styled(MuiBox)>
                                              <div
                                                className="MuiBox-root MuiBox-root-31"
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  color="primary"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary",
                                                        "containedSecondary": "MuiButton-containedSecondary",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "Mui-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="button"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiButton-label"
                                                          >
                                                            View more
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </Styled(MuiBox)>
                                            <Styled(MuiBox)>
                                              <div
                                                className="MuiBox-root MuiBox-root-32"
                                              >
                                                <Styled(MuiBox)
                                                  className="makeStyles-approvedBadge-23"
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-33 makeStyles-approvedBadge-23"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      component="h6"
                                                      variant="subtitle1"
                                                    >
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        component="h6"
                                                        variant="subtitle1"
                                                      >
                                                        <h6
                                                          className="MuiTypography-root MuiTypography-subtitle1"
                                                        >
                                                          Approved
                                                        </h6>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </Styled(MuiBox)>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </TravelRequestCard>
                          <Connect(ViewTravelModal)
                            accomodationsInfo={
                              Array [
                                Object {
                                  "city": "Kigali",
                                  "country": "Rwanda",
                                  "description": "A serene environment for relaxation",
                                  "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                  "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                                  "numberOfRooms": 100,
                                  "photos": "image.png",
                                  "propertyType": "Hostel",
                                  "state": "Nyarugenge",
                                  "streetAddress": "KN 22 ST",
                                  "title": "Kigali Hostels",
                                  "typeOfBed": "Double Decker",
                                },
                                Object {
                                  "city": "Kigali",
                                  "country": "Rwanda",
                                  "description": "A serene environment for relaxation",
                                  "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                  "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                                  "numberOfRooms": 100,
                                  "photos": "image.png",
                                  "propertyType": "Hostel",
                                  "state": "Nyarugenge",
                                  "streetAddress": "KN 22 ST",
                                  "title": "Kigali Hostels",
                                  "typeOfBed": "Double Decker",
                                },
                                Object {
                                  "error": "No info on this accomodation",
                                },
                                Object {
                                  "error": "No info on this accomodation",
                                },
                              ]
                            }
                            handleUpdateTravel={[Function]}
                            onClose={[Function]}
                            openModal={false}
                            setOpenModal={[Function]}
                            updateSingleTravel={
                              Object {
                                "error": null,
                                "loading": false,
                                "travel": null,
                              }
                            }
                            usage="view"
                          >
                            <ViewTravelModal
                              accomodationsInfo={
                                Array [
                                  Object {
                                    "city": "Kigali",
                                    "country": "Rwanda",
                                    "description": "A serene environment for relaxation",
                                    "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                                    "numberOfRooms": 100,
                                    "photos": "image.png",
                                    "propertyType": "Hostel",
                                    "state": "Nyarugenge",
                                    "streetAddress": "KN 22 ST",
                                    "title": "Kigali Hostels",
                                    "typeOfBed": "Double Decker",
                                  },
                                  Object {
                                    "city": "Kigali",
                                    "country": "Rwanda",
                                    "description": "A serene environment for relaxation",
                                    "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                                    "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                                    "numberOfRooms": 100,
                                    "photos": "image.png",
                                    "propertyType": "Hostel",
                                    "state": "Nyarugenge",
                                    "streetAddress": "KN 22 ST",
                                    "title": "Kigali Hostels",
                                    "typeOfBed": "Double Decker",
                                  },
                                  Object {
                                    "error": "No info on this accomodation",
                                  },
                                  Object {
                                    "error": "No info on this accomodation",
                                  },
                                ]
                              }
                              clearUpdateTravelRequest={[Function]}
                              getSingleTravelRequest={[Function]}
                              handleUpdateTravel={[Function]}
                              onClose={[Function]}
                              openModal={false}
                              setOpenModal={[Function]}
                              singleTravel={
                                Object {
                                  "error": null,
                                  "loading": false,
                                  "travel": Array [
                                    Object {
                                      "travelRequestInfo": Object {
                                        "Trip": Array [],
                                        "createdAt": "2021-01-11T20:09:02.833Z",
                                        "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
                                        "status": "rejected",
                                        "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
                                        "updatedAt": "2021-03-01T08:54:54.237Z",
                                        "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
                                      },
                                      "userInfo": Object {
                                        "firstName": "pushRequester",
                                        "lastName": "One",
                                        "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
                                        "username": "pushrequester",
                                      },
                                    },
                                  ],
                                }
                              }
                              updateSingleTravel={
                                Object {
                                  "error": null,
                                  "loading": false,
                                  "travel": null,
                                }
                              }
                              usage="view"
                            >
                              <WithStyles(ForwardRef(Dialog))
                                PaperProps={
                                  Object {
                                    "style": Object {
                                      "padding": 10,
                                    },
                                  }
                                }
                                aria-labelledby="responsive-dialog-title"
                                fullScreen={false}
                                maxWidth="md"
                                onClose={[Function]}
                                open={false}
                                style={
                                  Object {
                                    "padding": 10,
                                  }
                                }
                              >
                                <ForwardRef(Dialog)
                                  PaperProps={
                                    Object {
                                      "style": Object {
                                        "padding": 10,
                                      },
                                    }
                                  }
                                  aria-labelledby="responsive-dialog-title"
                                  classes={
                                    Object {
                                      "container": "MuiDialog-container",
                                      "paper": "MuiDialog-paper",
                                      "paperFullScreen": "MuiDialog-paperFullScreen",
                                      "paperFullWidth": "MuiDialog-paperFullWidth",
                                      "paperScrollBody": "MuiDialog-paperScrollBody",
                                      "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                      "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                      "paperWidthLg": "MuiDialog-paperWidthLg",
                                      "paperWidthMd": "MuiDialog-paperWidthMd",
                                      "paperWidthSm": "MuiDialog-paperWidthSm",
                                      "paperWidthXl": "MuiDialog-paperWidthXl",
                                      "paperWidthXs": "MuiDialog-paperWidthXs",
                                      "root": "MuiDialog-root",
                                      "scrollBody": "MuiDialog-scrollBody",
                                      "scrollPaper": "MuiDialog-scrollPaper",
                                    }
                                  }
                                  fullScreen={false}
                                  maxWidth="md"
                                  onClose={[Function]}
                                  open={false}
                                  style={
                                    Object {
                                      "padding": 10,
                                    }
                                  }
                                >
                                  <ForwardRef(Modal)
                                    BackdropComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "Naked": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "propTypes": Object {
                                            "children": [Function],
                                            "className": [Function],
                                            "classes": [Function],
                                            "invisible": [Function],
                                            "open": [Function],
                                            "transitionDuration": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "displayName": "WithStyles(ForwardRef(Backdrop))",
                                        "options": Object {
                                          "defaultTheme": Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "activatedOpacity": 0.12,
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "disabledOpacity": 0.38,
                                                "focus": "rgba(0, 0, 0, 0.12)",
                                                "focusOpacity": 0.12,
                                                "hover": "rgba(0, 0, 0, 0.04)",
                                                "hoverOpacity": 0.04,
                                                "selected": "rgba(0, 0, 0, 0.08)",
                                                "selectedOpacity": 0.08,
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "info": Object {
                                                "contrastText": "#fff",
                                                "dark": "#1976d2",
                                                "light": "#64b5f6",
                                                "main": "#2196f3",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "success": Object {
                                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                                "dark": "#388e3c",
                                                "light": "#81c784",
                                                "main": "#4caf50",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                              "warning": Object {
                                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                                "dark": "#f57c00",
                                                "light": "#ffb74d",
                                                "main": "#ff9800",
                                              },
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1.167,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1.2,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.167,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.235,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.334,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "speedDial": 1050,
                                              "tooltip": 1500,
                                            },
                                          },
                                          "name": "MuiBackdrop",
                                        },
                                        "propTypes": Object {
                                          "classes": [Function],
                                          "innerRef": [Function],
                                        },
                                        "render": [Function],
                                        "useStyles": [Function],
                                      }
                                    }
                                    BackdropProps={
                                      Object {
                                        "transitionDuration": Object {
                                          "enter": 225,
                                          "exit": 195,
                                        },
                                      }
                                    }
                                    className="MuiDialog-root"
                                    closeAfterTransition={true}
                                    disableBackdropClick={false}
                                    disableEscapeKeyDown={false}
                                    onClose={[Function]}
                                    open={false}
                                    style={
                                      Object {
                                        "padding": 10,
                                      }
                                    }
                                  />
                                </ForwardRef(Dialog)>
                              </WithStyles(ForwardRef(Dialog))>
                            </ViewTravelModal>
                          </Connect(ViewTravelModal)>
                        </div>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </ForwardRef(Card)>
                </WithStyles(ForwardRef(Card))>
              </div>
            </Styled(MuiBox)>
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-44"
              >
                <ErrorModal
                  error={null}
                  isOpen={false}
                  setIsOpen={[Function]}
                >
                  <div
                    className="makeStyles-root-45"
                  >
                    <WithStyles(ForwardRef(Snackbar))
                      autoHideDuration={6000}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Snackbar)
                        autoHideDuration={6000}
                        classes={
                          Object {
                            "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
                            "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
                            "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
                            "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
                            "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
                            "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
                            "root": "MuiSnackbar-root",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      />
                    </WithStyles(ForwardRef(Snackbar))>
                  </div>
                </ErrorModal>
                <div
                  className="makeStyles-paganete-11"
                />
              </div>
            </Styled(MuiBox)>
          </div>
        </ForwardRef(Container)>
      </WithStyles(ForwardRef(Container))>
    </div>
  </ReportsView>
</Provider>
`;

exports[` <ReportsView /> It should render the ReportsView component for Done reports 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ReportsView
    category="done"
    clearSingleRequest={[MockFunction]}
    clearUpdateTravelRequest={[MockFunction]}
    getSingleTravelRequest={[MockFunction]}
    getTravelRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    singleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    travelRequest={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "accommodationInfo": Array [
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "error": "No info on this accomodation",
              },
              Object {
                "error": "No info on this accomodation",
              },
            ],
            "travelRequestInfo": Object {
              "Trip": Array [
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Cairo",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-9ba4-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Kampala",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-4ab9-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": " Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "1a52f79e-568a-45b3-9151-4dfa40bb1217",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "aeebcf33-d125-44ce-b8c1-f5d5e8b75f13",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
              ],
              "createdAt": "2021-01-11T20:08:41.421Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "approved",
              "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
              "updatedAt": "2021-03-01T08:34:29.612Z",
              "userId": "83b2a3e7-9ba4-4d3f-b3a3-d31940ee2edc",
            },
            "userInfo": Object {
              "firstName": "Requester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "requesterOne",
            },
          },
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    updateSingleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": null,
      }
    }
    updateSingleTravelRequest={[MockFunction]}
  >
    <div
      className="makeStyles-container-1"
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <WithStyles(ForwardRef(Typography))
        component="h6"
        variant="h6"
      >
        <ForwardRef(Typography)
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="h6"
          variant="h6"
        >
          <h6
            className="MuiTypography-root MuiTypography-h6"
          >
            Direct report travel Request
          </h6>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Container))
        className="makeStyles-cardContainer-2"
        maxWidth="md"
      >
        <ForwardRef(Container)
          className="makeStyles-cardContainer-2"
          classes={
            Object {
              "disableGutters": "MuiContainer-disableGutters",
              "fixed": "MuiContainer-fixed",
              "maxWidthLg": "MuiContainer-maxWidthLg",
              "maxWidthMd": "MuiContainer-maxWidthMd",
              "maxWidthSm": "MuiContainer-maxWidthSm",
              "maxWidthXl": "MuiContainer-maxWidthXl",
              "maxWidthXs": "MuiContainer-maxWidthXs",
              "root": "MuiContainer-root",
            }
          }
          maxWidth="md"
        >
          <div
            className="MuiContainer-root makeStyles-cardContainer-2 MuiContainer-maxWidthMd"
          >
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-59"
              >
                <center>
                  <Styled(MuiBox)
                    style={
                      Object {
                        "paddingTop": "50px",
                      }
                    }
                  >
                    <div
                      className="MuiBox-root MuiBox-root-60"
                      style={
                        Object {
                          "paddingTop": "50px",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Typography))
                        component="h6"
                        variant="subtitle1"
                      >
                        <ForwardRef(Typography)
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="h6"
                          variant="subtitle1"
                        >
                          <h6
                            className="MuiTypography-root MuiTypography-subtitle1"
                          >
                            No
                             
                            done
                             
                            travel request found
                          </h6>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                  </Styled(MuiBox)>
                </center>
              </div>
            </Styled(MuiBox)>
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-61"
              >
                <ErrorModal
                  error={null}
                  isOpen={false}
                  setIsOpen={[Function]}
                >
                  <div
                    className="makeStyles-root-55"
                  >
                    <WithStyles(ForwardRef(Snackbar))
                      autoHideDuration={6000}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Snackbar)
                        autoHideDuration={6000}
                        classes={
                          Object {
                            "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
                            "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
                            "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
                            "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
                            "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
                            "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
                            "root": "MuiSnackbar-root",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      />
                    </WithStyles(ForwardRef(Snackbar))>
                  </div>
                </ErrorModal>
                <div
                  className="makeStyles-paganete-11"
                />
              </div>
            </Styled(MuiBox)>
          </div>
        </ForwardRef(Container)>
      </WithStyles(ForwardRef(Container))>
    </div>
  </ReportsView>
</Provider>
`;

exports[` <ReportsView /> It should render the ReportsView component for invalid category 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ReportsView
    category="invalid"
    clearSingleRequest={[MockFunction]}
    clearUpdateTravelRequest={[MockFunction]}
    getSingleTravelRequest={[MockFunction]}
    getTravelRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    singleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    travelRequest={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "accommodationInfo": Array [
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "error": "No info on this accomodation",
              },
              Object {
                "error": "No info on this accomodation",
              },
            ],
            "travelRequestInfo": Object {
              "Trip": Array [
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Cairo",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-9ba4-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Kampala",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-4ab9-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": " Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "1a52f79e-568a-45b3-9151-4dfa40bb1217",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "aeebcf33-d125-44ce-b8c1-f5d5e8b75f13",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
              ],
              "createdAt": "2021-01-11T20:08:41.421Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "approved",
              "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
              "updatedAt": "2021-03-01T08:34:29.612Z",
              "userId": "83b2a3e7-9ba4-4d3f-b3a3-d31940ee2edc",
            },
            "userInfo": Object {
              "firstName": "Requester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "requesterOne",
            },
          },
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    updateSingleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": null,
      }
    }
    updateSingleTravelRequest={[MockFunction]}
  >
    <div
      className="makeStyles-container-1"
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <WithStyles(ForwardRef(Typography))
        component="h6"
        variant="h6"
      >
        <ForwardRef(Typography)
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="h6"
          variant="h6"
        >
          <h6
            className="MuiTypography-root MuiTypography-h6"
          >
            Direct report travel Request
          </h6>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Container))
        className="makeStyles-cardContainer-2"
        maxWidth="md"
      >
        <ForwardRef(Container)
          className="makeStyles-cardContainer-2"
          classes={
            Object {
              "disableGutters": "MuiContainer-disableGutters",
              "fixed": "MuiContainer-fixed",
              "maxWidthLg": "MuiContainer-maxWidthLg",
              "maxWidthMd": "MuiContainer-maxWidthMd",
              "maxWidthSm": "MuiContainer-maxWidthSm",
              "maxWidthXl": "MuiContainer-maxWidthXl",
              "maxWidthXs": "MuiContainer-maxWidthXs",
              "root": "MuiContainer-root",
            }
          }
          maxWidth="md"
        >
          <div
            className="MuiContainer-root makeStyles-cardContainer-2 MuiContainer-maxWidthMd"
          >
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-93"
              >
                <center>
                  <Styled(MuiBox)
                    style={
                      Object {
                        "paddingTop": "50px",
                      }
                    }
                  >
                    <div
                      className="MuiBox-root MuiBox-root-94"
                      style={
                        Object {
                          "paddingTop": "50px",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Typography))
                        component="h6"
                        variant="subtitle1"
                      >
                        <ForwardRef(Typography)
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="h6"
                          variant="subtitle1"
                        >
                          <h6
                            className="MuiTypography-root MuiTypography-subtitle1"
                          >
                            No
                             
                            invalid
                             
                            travel request found
                          </h6>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                  </Styled(MuiBox)>
                </center>
              </div>
            </Styled(MuiBox)>
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-95"
              >
                <ErrorModal
                  error={null}
                  isOpen={false}
                  setIsOpen={[Function]}
                >
                  <div
                    className="makeStyles-root-55"
                  >
                    <WithStyles(ForwardRef(Snackbar))
                      autoHideDuration={6000}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Snackbar)
                        autoHideDuration={6000}
                        classes={
                          Object {
                            "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
                            "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
                            "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
                            "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
                            "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
                            "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
                            "root": "MuiSnackbar-root",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      />
                    </WithStyles(ForwardRef(Snackbar))>
                  </div>
                </ErrorModal>
                <div
                  className="makeStyles-paganete-11"
                />
              </div>
            </Styled(MuiBox)>
          </div>
        </ForwardRef(Container)>
      </WithStyles(ForwardRef(Container))>
    </div>
  </ReportsView>
</Provider>
`;

exports[` <ReportsView /> It should render the ReportsView component for pending reports 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ReportsView
    category="pending"
    clearSingleRequest={[MockFunction]}
    clearUpdateTravelRequest={[MockFunction]}
    getSingleTravelRequest={[MockFunction]}
    getTravelRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    singleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    travelRequest={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "accommodationInfo": Array [
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "error": "No info on this accomodation",
              },
              Object {
                "error": "No info on this accomodation",
              },
            ],
            "travelRequestInfo": Object {
              "Trip": Array [
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Cairo",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-9ba4-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Kampala",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-4ab9-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": " Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "1a52f79e-568a-45b3-9151-4dfa40bb1217",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "aeebcf33-d125-44ce-b8c1-f5d5e8b75f13",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
              ],
              "createdAt": "2021-01-11T20:08:41.421Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "approved",
              "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
              "updatedAt": "2021-03-01T08:34:29.612Z",
              "userId": "83b2a3e7-9ba4-4d3f-b3a3-d31940ee2edc",
            },
            "userInfo": Object {
              "firstName": "Requester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "requesterOne",
            },
          },
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    updateSingleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": null,
      }
    }
    updateSingleTravelRequest={[MockFunction]}
  >
    <div
      className="makeStyles-container-1"
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <WithStyles(ForwardRef(Typography))
        component="h6"
        variant="h6"
      >
        <ForwardRef(Typography)
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="h6"
          variant="h6"
        >
          <h6
            className="MuiTypography-root MuiTypography-h6"
          >
            Direct report travel Request
          </h6>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Container))
        className="makeStyles-cardContainer-2"
        maxWidth="md"
      >
        <ForwardRef(Container)
          className="makeStyles-cardContainer-2"
          classes={
            Object {
              "disableGutters": "MuiContainer-disableGutters",
              "fixed": "MuiContainer-fixed",
              "maxWidthLg": "MuiContainer-maxWidthLg",
              "maxWidthMd": "MuiContainer-maxWidthMd",
              "maxWidthSm": "MuiContainer-maxWidthSm",
              "maxWidthXl": "MuiContainer-maxWidthXl",
              "maxWidthXs": "MuiContainer-maxWidthXs",
              "root": "MuiContainer-root",
            }
          }
          maxWidth="md"
        >
          <div
            className="MuiContainer-root makeStyles-cardContainer-2 MuiContainer-maxWidthMd"
          >
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-56"
              >
                <center>
                  <Styled(MuiBox)
                    style={
                      Object {
                        "paddingTop": "50px",
                      }
                    }
                  >
                    <div
                      className="MuiBox-root MuiBox-root-57"
                      style={
                        Object {
                          "paddingTop": "50px",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(Typography))
                        component="h6"
                        variant="subtitle1"
                      >
                        <ForwardRef(Typography)
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          component="h6"
                          variant="subtitle1"
                        >
                          <h6
                            className="MuiTypography-root MuiTypography-subtitle1"
                          >
                            No
                             
                            pending
                             
                            travel request found
                          </h6>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                    </div>
                  </Styled(MuiBox)>
                </center>
              </div>
            </Styled(MuiBox)>
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-58"
              >
                <ErrorModal
                  error={null}
                  isOpen={false}
                  setIsOpen={[Function]}
                >
                  <div
                    className="makeStyles-root-55"
                  >
                    <WithStyles(ForwardRef(Snackbar))
                      autoHideDuration={6000}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Snackbar)
                        autoHideDuration={6000}
                        classes={
                          Object {
                            "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
                            "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
                            "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
                            "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
                            "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
                            "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
                            "root": "MuiSnackbar-root",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      />
                    </WithStyles(ForwardRef(Snackbar))>
                  </div>
                </ErrorModal>
                <div
                  className="makeStyles-paganete-11"
                />
              </div>
            </Styled(MuiBox)>
          </div>
        </ForwardRef(Container)>
      </WithStyles(ForwardRef(Container))>
    </div>
  </ReportsView>
</Provider>
`;

exports[` <ReportsView /> It should render the ReportsView component for rejected reports 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ReportsView
    category="rejected"
    clearSingleRequest={[MockFunction]}
    clearUpdateTravelRequest={[MockFunction]}
    getSingleTravelRequest={[MockFunction]}
    getTravelRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    singleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    travelRequest={
      Object {
        "error": null,
        "loading": false,
        "travel": Array [
          Object {
            "accommodationInfo": Array [
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "city": "Kigali",
                "country": "Rwanda",
                "description": "A serene environment for relaxation",
                "id": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                "locationID": "c6028e0d-ef88-4693-ab49-f37669891724",
                "numberOfRooms": 100,
                "photos": "image.png",
                "propertyType": "Hostel",
                "state": "Nyarugenge",
                "streetAddress": "KN 22 ST",
                "title": "Kigali Hostels",
                "typeOfBed": "Double Decker",
              },
              Object {
                "error": "No info on this accomodation",
              },
              Object {
                "error": "No info on this accomodation",
              },
            ],
            "travelRequestInfo": Object {
              "Trip": Array [
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Cairo",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-9ba4-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Kampala",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "83b2a3e7-4ab9-3f4d-b3a3-d31940ee2edc",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": " Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "1a52f79e-568a-45b3-9151-4dfa40bb1217",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
                Object {
                  "accommodationId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc8",
                  "createdAt": "2021-01-11T20:08:41.427Z",
                  "destination": "Nairobi",
                  "originCity": "Kigali",
                  "reason": "Trippin",
                  "returnDate": "2021-10-10T00:00:00.000Z",
                  "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
                  "tripDate": "2020-10-10T00:00:00.000Z",
                  "tripId": "aeebcf33-d125-44ce-b8c1-f5d5e8b75f13",
                  "updatedAt": "2021-01-11T20:08:41.427Z",
                },
              ],
              "createdAt": "2021-01-11T20:08:41.421Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "approved",
              "travelId": "0ce36391-2c08-3074-bddb-a4ea8cccbbc5",
              "updatedAt": "2021-03-01T08:34:29.612Z",
              "userId": "83b2a3e7-9ba4-4d3f-b3a3-d31940ee2edc",
            },
            "userInfo": Object {
              "firstName": "Requester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "requesterOne",
            },
          },
          Object {
            "travelRequestInfo": Object {
              "Trip": Array [],
              "createdAt": "2021-01-11T20:09:02.833Z",
              "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
              "status": "rejected",
              "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
              "updatedAt": "2021-03-01T08:54:54.237Z",
              "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
            },
            "userInfo": Object {
              "firstName": "pushRequester",
              "lastName": "One",
              "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
              "username": "pushrequester",
            },
          },
        ],
      }
    }
    updateSingleTravel={
      Object {
        "error": null,
        "loading": false,
        "travel": null,
      }
    }
    updateSingleTravelRequest={[MockFunction]}
  >
    <div
      className="makeStyles-container-1"
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <WithStyles(ForwardRef(Typography))
        component="h6"
        variant="h6"
      >
        <ForwardRef(Typography)
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="h6"
          variant="h6"
        >
          <h6
            className="MuiTypography-root MuiTypography-h6"
          >
            Direct report travel Request
          </h6>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Container))
        className="makeStyles-cardContainer-2"
        maxWidth="md"
      >
        <ForwardRef(Container)
          className="makeStyles-cardContainer-2"
          classes={
            Object {
              "disableGutters": "MuiContainer-disableGutters",
              "fixed": "MuiContainer-fixed",
              "maxWidthLg": "MuiContainer-maxWidthLg",
              "maxWidthMd": "MuiContainer-maxWidthMd",
              "maxWidthSm": "MuiContainer-maxWidthSm",
              "maxWidthXl": "MuiContainer-maxWidthXl",
              "maxWidthXs": "MuiContainer-maxWidthXs",
              "root": "MuiContainer-root",
            }
          }
          maxWidth="md"
        >
          <div
            className="MuiContainer-root makeStyles-cardContainer-2 MuiContainer-maxWidthMd"
          >
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-52"
              >
                <WithStyles(ForwardRef(Card))
                  className="makeStyles-root-3"
                >
                  <ForwardRef(Card)
                    className="makeStyles-root-3"
                    classes={
                      Object {
                        "root": "MuiCard-root",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="MuiCard-root makeStyles-root-3"
                      elevation={1}
                    >
                      <ForwardRef(Paper)
                        className="MuiCard-root makeStyles-root-3"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "outlined": "MuiPaper-outlined",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        elevation={1}
                      >
                        <div
                          className="MuiPaper-root MuiCard-root makeStyles-root-3 MuiPaper-elevation1 MuiPaper-rounded"
                        >
                          <TravelRequestCard
                            category="rejected"
                            handleSingleTravel={[Function]}
                            travel={
                              Object {
                                "Trip": Array [],
                                "createdAt": "2021-01-11T20:09:02.833Z",
                                "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
                                "status": "rejected",
                                "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
                                "updatedAt": "2021-03-01T08:54:54.237Z",
                                "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
                              }
                            }
                            userInfo={
                              Object {
                                "firstName": "pushRequester",
                                "lastName": "One",
                                "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
                                "username": "pushrequester",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(Grid))
                              className="makeStyles-container-14"
                              container={true}
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-container-14"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                container={true}
                              >
                                <div
                                  className="MuiGrid-root makeStyles-container-14 MuiGrid-container"
                                >
                                  <WithStyles(ForwardRef(Grid))
                                    item={true}
                                    sm={4}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      sm={4}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-4"
                                      >
                                        <Styled(MuiBox)
                                          className="makeStyles-imageContainer-15"
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-53 makeStyles-imageContainer-15"
                                          >
                                            <img
                                              alt="request image"
                                              onError={[Function]}
                                              src="https://res.cloudinary.com/nowo-ltd/image/upload/v1614639495/default-placeholder_uoekkz.png"
                                              width="100%"
                                            />
                                          </div>
                                        </Styled(MuiBox)>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                  <WithStyles(ForwardRef(Grid))
                                    className="makeStyles-requestDetails-16"
                                    item={true}
                                    sm={8}
                                    xs={12}
                                  >
                                    <ForwardRef(Grid)
                                      className="makeStyles-requestDetails-16"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                          "container": "MuiGrid-container",
                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                          "grid-md-1": "MuiGrid-grid-md-1",
                                          "grid-md-10": "MuiGrid-grid-md-10",
                                          "grid-md-11": "MuiGrid-grid-md-11",
                                          "grid-md-12": "MuiGrid-grid-md-12",
                                          "grid-md-2": "MuiGrid-grid-md-2",
                                          "grid-md-3": "MuiGrid-grid-md-3",
                                          "grid-md-4": "MuiGrid-grid-md-4",
                                          "grid-md-5": "MuiGrid-grid-md-5",
                                          "grid-md-6": "MuiGrid-grid-md-6",
                                          "grid-md-7": "MuiGrid-grid-md-7",
                                          "grid-md-8": "MuiGrid-grid-md-8",
                                          "grid-md-9": "MuiGrid-grid-md-9",
                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                          "grid-md-true": "MuiGrid-grid-md-true",
                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                          "item": "MuiGrid-item",
                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                          "root": "MuiGrid-root",
                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                        }
                                      }
                                      item={true}
                                      sm={8}
                                      xs={12}
                                    >
                                      <div
                                        className="MuiGrid-root makeStyles-requestDetails-16 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-8"
                                      >
                                        <Styled(MuiBox)>
                                          <div
                                            className="MuiBox-root MuiBox-root-54"
                                          >
                                            <Styled(MuiBox)
                                              className="makeStyles-requesterInfo-17"
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-55 makeStyles-requesterInfo-17"
                                              >
                                                <ForwardRef(AccountCircleIcon)>
                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                    <ForwardRef(SvgIcon)
                                                      classes={
                                                        Object {
                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                          "colorError": "MuiSvgIcon-colorError",
                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                          "root": "MuiSvgIcon-root",
                                                        }
                                                      }
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        className="MuiSvgIcon-root"
                                                        focusable="false"
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <path
                                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                        />
                                                      </svg>
                                                    </ForwardRef(SvgIcon)>
                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                </ForwardRef(AccountCircleIcon)>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="makeStyles-username-18"
                                                  component="h6"
                                                  variant="h6"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-username-18"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    variant="h6"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root makeStyles-username-18 MuiTypography-h6"
                                                    >
                                                       
                                                      pushrequester
                                                       
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </Styled(MuiBox)>
                                            <Styled(MuiBox)
                                              className="makeStyles-reasonArea-19"
                                            >
                                              <div
                                                className="MuiBox-root MuiBox-root-56 makeStyles-reasonArea-19"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h6"
                                                  variant="subtitle2"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    variant="subtitle2"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiTypography-subtitle2"
                                                    >
                                                       
                                                      Reason of travel
                                                       
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h6"
                                                  variant="caption"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    variant="caption"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiTypography-caption"
                                                    >
                                                      No available Trip reason
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </Styled(MuiBox)>
                                            <Styled(MuiBox)>
                                              <div
                                                className="MuiBox-root MuiBox-root-57"
                                              >
                                                <WithStyles(ForwardRef(Typography))
                                                  component="h6"
                                                  style={
                                                    Object {
                                                      "color": "#54AD7D",
                                                      "position": "absolute",
                                                      "right": "10px",
                                                      "top": "10px",
                                                    }
                                                  }
                                                  variant="caption"
                                                >
                                                  <ForwardRef(Typography)
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="h6"
                                                    style={
                                                      Object {
                                                        "color": "#54AD7D",
                                                        "position": "absolute",
                                                        "right": "10px",
                                                        "top": "10px",
                                                      }
                                                    }
                                                    variant="caption"
                                                  >
                                                    <h6
                                                      className="MuiTypography-root MuiTypography-caption"
                                                      style={
                                                        Object {
                                                          "color": "#54AD7D",
                                                          "position": "absolute",
                                                          "right": "10px",
                                                          "top": "10px",
                                                        }
                                                      }
                                                    >
                                                      <n
                                                        ago={false}
                                                        calendar={false}
                                                        decimal={false}
                                                        element={null}
                                                        filter={[Function]}
                                                        format="YYYY/MM/DD"
                                                        fromNow={false}
                                                        interval={60000}
                                                        local={false}
                                                        onChange={[Function]}
                                                        titleFormat=""
                                                        toNow={false}
                                                        trim={false}
                                                        unit={null}
                                                        unix={false}
                                                        utc={false}
                                                        withTitle={false}
                                                      >
                                                        <time
                                                          dateTime={"2021-01-11T20:09:02.833Z"}
                                                        >
                                                          2021/01/11
                                                        </time>
                                                      </n>
                                                    </h6>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </Styled(MuiBox)>
                                        <Styled(MuiBox)
                                          className="makeStyles-actions-20"
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-58 makeStyles-actions-20"
                                          >
                                            <Styled(MuiBox)>
                                              <div
                                                className="MuiBox-root MuiBox-root-59"
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  color="primary"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(Button)
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary",
                                                        "containedSecondary": "MuiButton-containedSecondary",
                                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                        "disableElevation": "MuiButton-disableElevation",
                                                        "disabled": "Mui-disabled",
                                                        "endIcon": "MuiButton-endIcon",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                        "label": "MuiButton-label",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                        "root": "MuiButton-root",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "startIcon": "MuiButton-startIcon",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                                      }
                                                    }
                                                    color="primary"
                                                    onClick={[Function]}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="button"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        onClick={[Function]}
                                                        type="button"
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textPrimary"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiButton-label"
                                                          >
                                                            View more
                                                          </span>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </div>
                                            </Styled(MuiBox)>
                                            <Styled(MuiBox)>
                                              <div
                                                className="MuiBox-root MuiBox-root-60"
                                              >
                                                <Styled(MuiBox)
                                                  className="makeStyles-badge-24"
                                                  style={
                                                    Object {
                                                      "backgroundColor": "#CE2020",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiBox-root MuiBox-root-61 makeStyles-badge-24"
                                                    style={
                                                      Object {
                                                        "backgroundColor": "#CE2020",
                                                      }
                                                    }
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      component="h6"
                                                      style={
                                                        Object {
                                                          "textTransform": "capitalize",
                                                        }
                                                      }
                                                      variant="subtitle1"
                                                    >
                                                      <ForwardRef(Typography)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        component="h6"
                                                        style={
                                                          Object {
                                                            "textTransform": "capitalize",
                                                          }
                                                        }
                                                        variant="subtitle1"
                                                      >
                                                        <h6
                                                          className="MuiTypography-root MuiTypography-subtitle1"
                                                          style={
                                                            Object {
                                                              "textTransform": "capitalize",
                                                            }
                                                          }
                                                        >
                                                          rejected
                                                        </h6>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                </Styled(MuiBox)>
                                              </div>
                                            </Styled(MuiBox)>
                                          </div>
                                        </Styled(MuiBox)>
                                      </div>
                                    </ForwardRef(Grid)>
                                  </WithStyles(ForwardRef(Grid))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </TravelRequestCard>
                          <Connect(ViewTravelModal)
                            handleUpdateTravel={[Function]}
                            onClose={[Function]}
                            openModal={false}
                            setOpenModal={[Function]}
                            updateSingleTravel={
                              Object {
                                "error": null,
                                "loading": false,
                                "travel": null,
                              }
                            }
                            usage="view"
                          >
                            <ViewTravelModal
                              clearUpdateTravelRequest={[Function]}
                              getSingleTravelRequest={[Function]}
                              handleUpdateTravel={[Function]}
                              onClose={[Function]}
                              openModal={false}
                              setOpenModal={[Function]}
                              singleTravel={
                                Object {
                                  "error": null,
                                  "loading": false,
                                  "travel": Array [
                                    Object {
                                      "travelRequestInfo": Object {
                                        "Trip": Array [],
                                        "createdAt": "2021-01-11T20:09:02.833Z",
                                        "managerId": "0ce36391-2c08-4703-bddb-a4ea8cccbbc5",
                                        "status": "rejected",
                                        "travelId": "6a631198-cb98-4925-82fc-b00be0d34e32",
                                        "updatedAt": "2021-03-01T08:54:54.237Z",
                                        "userId": "d74fcc5e-5755-4366-83ef-cf306b013c46",
                                      },
                                      "userInfo": Object {
                                        "firstName": "pushRequester",
                                        "lastName": "One",
                                        "profilePpicture": "https://www.cobdoglaps.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg",
                                        "username": "pushrequester",
                                      },
                                    },
                                  ],
                                }
                              }
                              updateSingleTravel={
                                Object {
                                  "error": null,
                                  "loading": false,
                                  "travel": null,
                                }
                              }
                              usage="view"
                            >
                              <WithStyles(ForwardRef(Dialog))
                                PaperProps={
                                  Object {
                                    "style": Object {
                                      "padding": 10,
                                    },
                                  }
                                }
                                aria-labelledby="responsive-dialog-title"
                                fullScreen={false}
                                maxWidth="md"
                                onClose={[Function]}
                                open={false}
                                style={
                                  Object {
                                    "padding": 10,
                                  }
                                }
                              >
                                <ForwardRef(Dialog)
                                  PaperProps={
                                    Object {
                                      "style": Object {
                                        "padding": 10,
                                      },
                                    }
                                  }
                                  aria-labelledby="responsive-dialog-title"
                                  classes={
                                    Object {
                                      "container": "MuiDialog-container",
                                      "paper": "MuiDialog-paper",
                                      "paperFullScreen": "MuiDialog-paperFullScreen",
                                      "paperFullWidth": "MuiDialog-paperFullWidth",
                                      "paperScrollBody": "MuiDialog-paperScrollBody",
                                      "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                      "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                      "paperWidthLg": "MuiDialog-paperWidthLg",
                                      "paperWidthMd": "MuiDialog-paperWidthMd",
                                      "paperWidthSm": "MuiDialog-paperWidthSm",
                                      "paperWidthXl": "MuiDialog-paperWidthXl",
                                      "paperWidthXs": "MuiDialog-paperWidthXs",
                                      "root": "MuiDialog-root",
                                      "scrollBody": "MuiDialog-scrollBody",
                                      "scrollPaper": "MuiDialog-scrollPaper",
                                    }
                                  }
                                  fullScreen={false}
                                  maxWidth="md"
                                  onClose={[Function]}
                                  open={false}
                                  style={
                                    Object {
                                      "padding": 10,
                                    }
                                  }
                                >
                                  <ForwardRef(Modal)
                                    BackdropComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "Naked": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "propTypes": Object {
                                            "children": [Function],
                                            "className": [Function],
                                            "classes": [Function],
                                            "invisible": [Function],
                                            "open": [Function],
                                            "transitionDuration": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "displayName": "WithStyles(ForwardRef(Backdrop))",
                                        "options": Object {
                                          "defaultTheme": Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "activatedOpacity": 0.12,
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "disabledOpacity": 0.38,
                                                "focus": "rgba(0, 0, 0, 0.12)",
                                                "focusOpacity": 0.12,
                                                "hover": "rgba(0, 0, 0, 0.04)",
                                                "hoverOpacity": 0.04,
                                                "selected": "rgba(0, 0, 0, 0.08)",
                                                "selectedOpacity": 0.08,
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "info": Object {
                                                "contrastText": "#fff",
                                                "dark": "#1976d2",
                                                "light": "#64b5f6",
                                                "main": "#2196f3",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "success": Object {
                                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                                "dark": "#388e3c",
                                                "light": "#81c784",
                                                "main": "#4caf50",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                              "warning": Object {
                                                "contrastText": "rgba(0, 0, 0, 0.87)",
                                                "dark": "#f57c00",
                                                "light": "#ffb74d",
                                                "main": "#ff9800",
                                              },
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1.167,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1.2,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.167,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.235,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.334,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "speedDial": 1050,
                                              "tooltip": 1500,
                                            },
                                          },
                                          "name": "MuiBackdrop",
                                        },
                                        "propTypes": Object {
                                          "classes": [Function],
                                          "innerRef": [Function],
                                        },
                                        "render": [Function],
                                        "useStyles": [Function],
                                      }
                                    }
                                    BackdropProps={
                                      Object {
                                        "transitionDuration": Object {
                                          "enter": 225,
                                          "exit": 195,
                                        },
                                      }
                                    }
                                    className="MuiDialog-root"
                                    closeAfterTransition={true}
                                    disableBackdropClick={false}
                                    disableEscapeKeyDown={false}
                                    onClose={[Function]}
                                    open={false}
                                    style={
                                      Object {
                                        "padding": 10,
                                      }
                                    }
                                  />
                                </ForwardRef(Dialog)>
                              </WithStyles(ForwardRef(Dialog))>
                            </ViewTravelModal>
                          </Connect(ViewTravelModal)>
                        </div>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </ForwardRef(Card)>
                </WithStyles(ForwardRef(Card))>
              </div>
            </Styled(MuiBox)>
            <Styled(MuiBox)>
              <div
                className="MuiBox-root MuiBox-root-72"
              >
                <ErrorModal
                  error={null}
                  isOpen={false}
                  setIsOpen={[Function]}
                >
                  <div
                    className="makeStyles-root-45"
                  >
                    <WithStyles(ForwardRef(Snackbar))
                      autoHideDuration={6000}
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Snackbar)
                        autoHideDuration={6000}
                        classes={
                          Object {
                            "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
                            "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
                            "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
                            "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
                            "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
                            "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
                            "root": "MuiSnackbar-root",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      />
                    </WithStyles(ForwardRef(Snackbar))>
                  </div>
                </ErrorModal>
                <div
                  className="makeStyles-paganete-11"
                />
              </div>
            </Styled(MuiBox)>
          </div>
        </ForwardRef(Container)>
      </WithStyles(ForwardRef(Container))>
    </div>
  </ReportsView>
</Provider>
`;

exports[` <ReportsView /> It should render the ReportsView skeleton 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ReportsView
    category="approved"
    clearSingleRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    clearUpdateTravelRequest={[MockFunction]}
    getSingleTravelRequest={[MockFunction]}
    getTravelRequest={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    singleTravel={
      Object {
        "error": null,
        "loading": true,
        "travel": Array [],
      }
    }
    travelRequest={
      Object {
        "error": null,
        "loading": true,
        "travel": Array [],
      }
    }
    updateSingleTravel={
      Object {
        "error": null,
        "loading": true,
        "travel": Array [],
      }
    }
    updateSingleTravelRequest={[MockFunction]}
  >
    <div
      className="makeStyles-container-1"
      style={
        Object {
          "boxShadow": "none",
        }
      }
    >
      <WithStyles(ForwardRef(Typography))
        component="h6"
        variant="h6"
      >
        <ForwardRef(Typography)
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          component="h6"
          variant="h6"
        >
          <h6
            className="MuiTypography-root MuiTypography-h6"
          >
            Direct report travel Request
          </h6>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Card))
        className="makeStyles-root-3"
        style={
          Object {
            "boxShadow": "none",
          }
        }
      >
        <ForwardRef(Card)
          className="makeStyles-root-3"
          classes={
            Object {
              "root": "MuiCard-root",
            }
          }
          style={
            Object {
              "boxShadow": "none",
            }
          }
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiCard-root makeStyles-root-3"
            elevation={1}
            style={
              Object {
                "boxShadow": "none",
              }
            }
          >
            <ForwardRef(Paper)
              className="MuiCard-root makeStyles-root-3"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              elevation={1}
              style={
                Object {
                  "boxShadow": "none",
                }
              }
            >
              <div
                className="MuiPaper-root MuiCard-root makeStyles-root-3 MuiPaper-elevation1 MuiPaper-rounded"
                style={
                  Object {
                    "boxShadow": "none",
                  }
                }
              >
                <WithStyles(ForwardRef(Paper))
                  className="makeStyles-imageContainer-10"
                >
                  <ForwardRef(Paper)
                    className="makeStyles-imageContainer-10"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "outlined": "MuiPaper-outlined",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                  >
                    <div
                      className="MuiPaper-root makeStyles-imageContainer-10 MuiPaper-elevation1 MuiPaper-rounded"
                    >
                      <WithStyles(ForwardRef(Skeleton))
                        animation="wave"
                        height="300px"
                        variant="rect"
                        width="320px"
                      >
                        <ForwardRef(Skeleton)
                          animation="wave"
                          classes={
                            Object {
                              "circle": "MuiSkeleton-circle",
                              "fitContent": "MuiSkeleton-fitContent",
                              "heightAuto": "MuiSkeleton-heightAuto",
                              "pulse": "MuiSkeleton-pulse",
                              "rect": "MuiSkeleton-rect",
                              "root": "MuiSkeleton-root",
                              "text": "MuiSkeleton-text",
                              "wave": "MuiSkeleton-wave",
                              "withChildren": "MuiSkeleton-withChildren",
                            }
                          }
                          height="300px"
                          variant="rect"
                          width="320px"
                        >
                          <span
                            className="MuiSkeleton-root MuiSkeleton-rect MuiSkeleton-wave"
                            style={
                              Object {
                                "height": "300px",
                                "width": "320px",
                              }
                            }
                          />
                        </ForwardRef(Skeleton)>
                      </WithStyles(ForwardRef(Skeleton))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
                <div
                  className="makeStyles-details-4"
                >
                  <WithStyles(ForwardRef(CardContent))
                    className="makeStyles-content-5"
                  >
                    <ForwardRef(CardContent)
                      className="makeStyles-content-5"
                      classes={
                        Object {
                          "root": "MuiCardContent-root",
                        }
                      }
                    >
                      <div
                        className="MuiCardContent-root makeStyles-content-5"
                      >
                        <div
                          className="makeStyles-requesterProfi-9"
                        >
                          <WithStyles(ForwardRef(Skeleton))
                            height={40}
                            variant="circle"
                            width={40}
                          >
                            <ForwardRef(Skeleton)
                              classes={
                                Object {
                                  "circle": "MuiSkeleton-circle",
                                  "fitContent": "MuiSkeleton-fitContent",
                                  "heightAuto": "MuiSkeleton-heightAuto",
                                  "pulse": "MuiSkeleton-pulse",
                                  "rect": "MuiSkeleton-rect",
                                  "root": "MuiSkeleton-root",
                                  "text": "MuiSkeleton-text",
                                  "wave": "MuiSkeleton-wave",
                                  "withChildren": "MuiSkeleton-withChildren",
                                }
                              }
                              height={40}
                              variant="circle"
                              width={40}
                            >
                              <span
                                className="MuiSkeleton-root MuiSkeleton-circle MuiSkeleton-pulse"
                                style={
                                  Object {
                                    "height": 40,
                                    "width": 40,
                                  }
                                }
                              />
                            </ForwardRef(Skeleton)>
                          </WithStyles(ForwardRef(Skeleton))>
                          <WithStyles(ForwardRef(Skeleton))
                            className="makeStyles-name-7"
                            height="20"
                            variant="text"
                            width="190px"
                          >
                            <ForwardRef(Skeleton)
                              className="makeStyles-name-7"
                              classes={
                                Object {
                                  "circle": "MuiSkeleton-circle",
                                  "fitContent": "MuiSkeleton-fitContent",
                                  "heightAuto": "MuiSkeleton-heightAuto",
                                  "pulse": "MuiSkeleton-pulse",
                                  "rect": "MuiSkeleton-rect",
                                  "root": "MuiSkeleton-root",
                                  "text": "MuiSkeleton-text",
                                  "wave": "MuiSkeleton-wave",
                                  "withChildren": "MuiSkeleton-withChildren",
                                }
                              }
                              height="20"
                              variant="text"
                              width="190px"
                            >
                              <span
                                className="MuiSkeleton-root MuiSkeleton-text makeStyles-name-7 MuiSkeleton-pulse"
                                style={
                                  Object {
                                    "height": "20",
                                    "width": "190px",
                                  }
                                }
                              />
                            </ForwardRef(Skeleton)>
                          </WithStyles(ForwardRef(Skeleton))>
                          <WithStyles(ForwardRef(Skeleton))
                            height="20"
                            style={
                              Object {
                                "float": "right",
                              }
                            }
                            variant="text"
                            width="100px"
                          >
                            <ForwardRef(Skeleton)
                              classes={
                                Object {
                                  "circle": "MuiSkeleton-circle",
                                  "fitContent": "MuiSkeleton-fitContent",
                                  "heightAuto": "MuiSkeleton-heightAuto",
                                  "pulse": "MuiSkeleton-pulse",
                                  "rect": "MuiSkeleton-rect",
                                  "root": "MuiSkeleton-root",
                                  "text": "MuiSkeleton-text",
                                  "wave": "MuiSkeleton-wave",
                                  "withChildren": "MuiSkeleton-withChildren",
                                }
                              }
                              height="20"
                              style={
                                Object {
                                  "float": "right",
                                }
                              }
                              variant="text"
                              width="100px"
                            >
                              <span
                                className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                                style={
                                  Object {
                                    "float": "right",
                                    "height": "20",
                                    "width": "100px",
                                  }
                                }
                              />
                            </ForwardRef(Skeleton)>
                          </WithStyles(ForwardRef(Skeleton))>
                        </div>
                        <WithStyles(ForwardRef(Skeleton))
                          height="40px"
                          style={
                            Object {
                              "marginLeft": "30px",
                            }
                          }
                          variant="text"
                          width="300px"
                        >
                          <ForwardRef(Skeleton)
                            classes={
                              Object {
                                "circle": "MuiSkeleton-circle",
                                "fitContent": "MuiSkeleton-fitContent",
                                "heightAuto": "MuiSkeleton-heightAuto",
                                "pulse": "MuiSkeleton-pulse",
                                "rect": "MuiSkeleton-rect",
                                "root": "MuiSkeleton-root",
                                "text": "MuiSkeleton-text",
                                "wave": "MuiSkeleton-wave",
                                "withChildren": "MuiSkeleton-withChildren",
                              }
                            }
                            height="40px"
                            style={
                              Object {
                                "marginLeft": "30px",
                              }
                            }
                            variant="text"
                            width="300px"
                          >
                            <span
                              className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                              style={
                                Object {
                                  "height": "40px",
                                  "marginLeft": "30px",
                                  "width": "300px",
                                }
                              }
                            />
                          </ForwardRef(Skeleton)>
                        </WithStyles(ForwardRef(Skeleton))>
                        <WithStyles(ForwardRef(Skeleton))
                          height="40px"
                          style={
                            Object {
                              "marginLeft": "30px",
                            }
                          }
                          variant="text"
                          width="100px"
                        >
                          <ForwardRef(Skeleton)
                            classes={
                              Object {
                                "circle": "MuiSkeleton-circle",
                                "fitContent": "MuiSkeleton-fitContent",
                                "heightAuto": "MuiSkeleton-heightAuto",
                                "pulse": "MuiSkeleton-pulse",
                                "rect": "MuiSkeleton-rect",
                                "root": "MuiSkeleton-root",
                                "text": "MuiSkeleton-text",
                                "wave": "MuiSkeleton-wave",
                                "withChildren": "MuiSkeleton-withChildren",
                              }
                            }
                            height="40px"
                            style={
                              Object {
                                "marginLeft": "30px",
                              }
                            }
                            variant="text"
                            width="100px"
                          >
                            <span
                              className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                              style={
                                Object {
                                  "height": "40px",
                                  "marginLeft": "30px",
                                  "width": "100px",
                                }
                              }
                            />
                          </ForwardRef(Skeleton)>
                        </WithStyles(ForwardRef(Skeleton))>
                        <div
                          className="makeStyles-controls-8"
                        >
                          <WithStyles(ForwardRef(Skeleton))
                            height="40px"
                            style={
                              Object {
                                "marginLeft": "23px",
                              }
                            }
                            variant="text"
                            width="100px"
                          >
                            <ForwardRef(Skeleton)
                              classes={
                                Object {
                                  "circle": "MuiSkeleton-circle",
                                  "fitContent": "MuiSkeleton-fitContent",
                                  "heightAuto": "MuiSkeleton-heightAuto",
                                  "pulse": "MuiSkeleton-pulse",
                                  "rect": "MuiSkeleton-rect",
                                  "root": "MuiSkeleton-root",
                                  "text": "MuiSkeleton-text",
                                  "wave": "MuiSkeleton-wave",
                                  "withChildren": "MuiSkeleton-withChildren",
                                }
                              }
                              height="40px"
                              style={
                                Object {
                                  "marginLeft": "23px",
                                }
                              }
                              variant="text"
                              width="100px"
                            >
                              <span
                                className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                                style={
                                  Object {
                                    "height": "40px",
                                    "marginLeft": "23px",
                                    "width": "100px",
                                  }
                                }
                              />
                            </ForwardRef(Skeleton)>
                          </WithStyles(ForwardRef(Skeleton))>
                          <div
                            className="makeStyles-buttons-12"
                          >
                            <WithStyles(ForwardRef(Skeleton))
                              height="40px"
                              variant="text"
                              width="150px"
                            >
                              <ForwardRef(Skeleton)
                                classes={
                                  Object {
                                    "circle": "MuiSkeleton-circle",
                                    "fitContent": "MuiSkeleton-fitContent",
                                    "heightAuto": "MuiSkeleton-heightAuto",
                                    "pulse": "MuiSkeleton-pulse",
                                    "rect": "MuiSkeleton-rect",
                                    "root": "MuiSkeleton-root",
                                    "text": "MuiSkeleton-text",
                                    "wave": "MuiSkeleton-wave",
                                    "withChildren": "MuiSkeleton-withChildren",
                                  }
                                }
                                height="40px"
                                variant="text"
                                width="150px"
                              >
                                <span
                                  className="MuiSkeleton-root MuiSkeleton-text MuiSkeleton-pulse"
                                  style={
                                    Object {
                                      "height": "40px",
                                      "width": "150px",
                                    }
                                  }
                                />
                              </ForwardRef(Skeleton)>
                            </WithStyles(ForwardRef(Skeleton))>
                          </div>
                        </div>
                      </div>
                    </ForwardRef(CardContent)>
                  </WithStyles(ForwardRef(CardContent))>
                </div>
              </div>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(Card)>
      </WithStyles(ForwardRef(Card))>
    </div>
  </ReportsView>
</Provider>
`;
