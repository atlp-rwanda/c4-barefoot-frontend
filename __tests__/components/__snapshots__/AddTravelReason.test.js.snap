// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddTravelReason /> if it matches snapshot 1`] = `
<AddTravelReason
  CheckReturningAction={[MockFunction]}
  addMultiCityAction={[MockFunction]}
  addTravelReasonAction={[MockFunction]}
  checkTravelDatesAction={[MockFunction]}
  closeSnackbar={[MockFunction]}
  getLocationsAction={[MockFunction]}
  handleErrorsAction={[MockFunction]}
  match={
    Object {
      "params": Object {
        "status": "pending",
      },
    }
  }
  openModalAction={[MockFunction]}
  removeMultiCityAction={[MockFunction]}
  searchCurrentLocationAction={[MockFunction]}
  selectAccommodationAction={[MockFunction]}
  sendTravelRequestAction={[MockFunction]}
  travelRequest={
    Object {
      "Modal": Object {
        "data": Object {},
        "open": false,
      },
      "availableAccommodations": Array [],
      "availableLocations": Array [],
      "currentLocation": Object {
        "LocationName": "Ngara",
        "country": "Kenya",
        "createdAt": "2021-03-01T09:26:01.207Z",
        "currency": null,
        "description": "Umoja ndio utulivu mpya kwetu",
        "id": "81e37435-ce52-4cbd-8194-e65072f80497",
        "link": "https://en.wikipedia.org/wiki/Kigali",
        "updatedAt": "2021-03-01T09:26:01.207Z",
      },
      "departureDate": "2021-03-27T08:05:00.000Z",
      "destinationLocation": Object {
        "LocationName": "Musanze",
        "country": "Rwanda",
        "createdAt": "2021-03-01T09:26:01.207Z",
        "currency": null,
        "description": "The land of a thousand hills",
        "id": "23fd8031-52d6-4150-958c-c162ba9e8f5c",
        "link": "https://en.wikipedia.org/wiki/Kigali",
        "updatedAt": "2021-03-01T09:26:01.207Z",
      },
      "displaySelected": false,
      "displaySelection": false,
      "returnDate": "2021-03-31T08:05:00.000Z",
      "searchAccommodationsLoading": false,
      "searchLocationsLoading": false,
      "selectedAccommodation": Object {
        "city": "Musanze",
        "country": "Rwanda",
        "description": "A serene environment for relaxation",
        "id": "d659e75b-0d6f-4253-b3cc-3a1d402b64f5",
        "locationID": "23fd8031-52d6-4150-958c-c162ba9e8f5c",
        "numberOfRooms": 100,
        "photos": "https://lh3.googleusercontent.com/proxy/k6XVeEROdqZ1LXqJw2IyiuERvv_3mAY5MHAxuwMDTE8Mq_aZbSSU9Zio1fpFnZMhWYy3T8MhwBSOjD6QV6qh4wsBQ_oHAJgsxGiRWyHI_ZIEUcyRtdUtth8rrmNPNw",
        "price": null,
        "propertyType": "Hostel",
        "state": "Up hills",
        "streetAddress": "KN 22 ST",
        "title": "Musanze political resots",
        "typeOfBed": "Double Decker",
      },
      "selectedLocations": Array [
        Object {
          "accommodation": Object {
            "city": "Meru county",
            "country": "Kenya",
            "description": "A serene environment for relaxation",
            "id": "99cd2fd4-6287-4b4e-bb84-c87b6a66d02b",
            "locationID": "81e37435-ce52-4cbd-8194-e65072f80497",
            "numberOfRooms": 10,
            "photos": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTnFLwqWS0Wu1-3CDjIQptBgGlbH8nSzqSiJA&usqp=CAU",
            "price": null,
            "propertyType": "Hostel",
            "state": "Wanyenye",
            "streetAddress": "KN 22 ST",
            "title": "Meru girls hostels",
            "typeOfBed": "Double Decker",
          },
          "current": Object {
            "LocationName": "Kigali",
            "country": "Rwanda",
            "createdAt": "2021-03-01T09:26:01.207Z",
            "currency": null,
            "description": "The land of a thousand hills",
            "id": "c6028e0d-ef88-4693-ab49-f37669891724",
            "link": "https://en.wikipedia.org/wiki/Kigali",
            "updatedAt": "2021-03-01T09:26:01.207Z",
          },
          "departureDate": "2021-03-26T08:05:49.174Z",
          "destination": Object {
            "LocationName": "Ngara",
            "country": "Kenya",
            "createdAt": "2021-03-01T09:26:01.207Z",
            "currency": null,
            "description": "Umoja ndio utulivu mpya kwetu",
            "id": "81e37435-ce52-4cbd-8194-e65072f80497",
            "link": "https://en.wikipedia.org/wiki/Kigali",
            "updatedAt": "2021-03-01T09:26:01.207Z",
          },
          "returnDate": "2021-03-27T08:05:00.000Z",
        },
      ],
      "sendLoading": false,
      "snackBarMessage": Object {
        "message": null,
        "open": false,
        "severity": "",
      },
      "success": false,
      "travelReason": "zfsefewfewfew",
    }
  }
>
  <WithStyles(ForwardRef(Grid))
    className="makeStyles-textFieldGrid-4"
    container={true}
  >
    <ForwardRef(Grid)
      className="makeStyles-textFieldGrid-4"
      classes={
        Object {
          "align-content-xs-center": "MuiGrid-align-content-xs-center",
          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
          "align-items-xs-center": "MuiGrid-align-items-xs-center",
          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
          "container": "MuiGrid-container",
          "direction-xs-column": "MuiGrid-direction-xs-column",
          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
          "grid-lg-1": "MuiGrid-grid-lg-1",
          "grid-lg-10": "MuiGrid-grid-lg-10",
          "grid-lg-11": "MuiGrid-grid-lg-11",
          "grid-lg-12": "MuiGrid-grid-lg-12",
          "grid-lg-2": "MuiGrid-grid-lg-2",
          "grid-lg-3": "MuiGrid-grid-lg-3",
          "grid-lg-4": "MuiGrid-grid-lg-4",
          "grid-lg-5": "MuiGrid-grid-lg-5",
          "grid-lg-6": "MuiGrid-grid-lg-6",
          "grid-lg-7": "MuiGrid-grid-lg-7",
          "grid-lg-8": "MuiGrid-grid-lg-8",
          "grid-lg-9": "MuiGrid-grid-lg-9",
          "grid-lg-auto": "MuiGrid-grid-lg-auto",
          "grid-lg-true": "MuiGrid-grid-lg-true",
          "grid-md-1": "MuiGrid-grid-md-1",
          "grid-md-10": "MuiGrid-grid-md-10",
          "grid-md-11": "MuiGrid-grid-md-11",
          "grid-md-12": "MuiGrid-grid-md-12",
          "grid-md-2": "MuiGrid-grid-md-2",
          "grid-md-3": "MuiGrid-grid-md-3",
          "grid-md-4": "MuiGrid-grid-md-4",
          "grid-md-5": "MuiGrid-grid-md-5",
          "grid-md-6": "MuiGrid-grid-md-6",
          "grid-md-7": "MuiGrid-grid-md-7",
          "grid-md-8": "MuiGrid-grid-md-8",
          "grid-md-9": "MuiGrid-grid-md-9",
          "grid-md-auto": "MuiGrid-grid-md-auto",
          "grid-md-true": "MuiGrid-grid-md-true",
          "grid-sm-1": "MuiGrid-grid-sm-1",
          "grid-sm-10": "MuiGrid-grid-sm-10",
          "grid-sm-11": "MuiGrid-grid-sm-11",
          "grid-sm-12": "MuiGrid-grid-sm-12",
          "grid-sm-2": "MuiGrid-grid-sm-2",
          "grid-sm-3": "MuiGrid-grid-sm-3",
          "grid-sm-4": "MuiGrid-grid-sm-4",
          "grid-sm-5": "MuiGrid-grid-sm-5",
          "grid-sm-6": "MuiGrid-grid-sm-6",
          "grid-sm-7": "MuiGrid-grid-sm-7",
          "grid-sm-8": "MuiGrid-grid-sm-8",
          "grid-sm-9": "MuiGrid-grid-sm-9",
          "grid-sm-auto": "MuiGrid-grid-sm-auto",
          "grid-sm-true": "MuiGrid-grid-sm-true",
          "grid-xl-1": "MuiGrid-grid-xl-1",
          "grid-xl-10": "MuiGrid-grid-xl-10",
          "grid-xl-11": "MuiGrid-grid-xl-11",
          "grid-xl-12": "MuiGrid-grid-xl-12",
          "grid-xl-2": "MuiGrid-grid-xl-2",
          "grid-xl-3": "MuiGrid-grid-xl-3",
          "grid-xl-4": "MuiGrid-grid-xl-4",
          "grid-xl-5": "MuiGrid-grid-xl-5",
          "grid-xl-6": "MuiGrid-grid-xl-6",
          "grid-xl-7": "MuiGrid-grid-xl-7",
          "grid-xl-8": "MuiGrid-grid-xl-8",
          "grid-xl-9": "MuiGrid-grid-xl-9",
          "grid-xl-auto": "MuiGrid-grid-xl-auto",
          "grid-xl-true": "MuiGrid-grid-xl-true",
          "grid-xs-1": "MuiGrid-grid-xs-1",
          "grid-xs-10": "MuiGrid-grid-xs-10",
          "grid-xs-11": "MuiGrid-grid-xs-11",
          "grid-xs-12": "MuiGrid-grid-xs-12",
          "grid-xs-2": "MuiGrid-grid-xs-2",
          "grid-xs-3": "MuiGrid-grid-xs-3",
          "grid-xs-4": "MuiGrid-grid-xs-4",
          "grid-xs-5": "MuiGrid-grid-xs-5",
          "grid-xs-6": "MuiGrid-grid-xs-6",
          "grid-xs-7": "MuiGrid-grid-xs-7",
          "grid-xs-8": "MuiGrid-grid-xs-8",
          "grid-xs-9": "MuiGrid-grid-xs-9",
          "grid-xs-auto": "MuiGrid-grid-xs-auto",
          "grid-xs-true": "MuiGrid-grid-xs-true",
          "item": "MuiGrid-item",
          "justify-xs-center": "MuiGrid-justify-xs-center",
          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
          "root": "MuiGrid-root",
          "spacing-xs-1": "MuiGrid-spacing-xs-1",
          "spacing-xs-10": "MuiGrid-spacing-xs-10",
          "spacing-xs-2": "MuiGrid-spacing-xs-2",
          "spacing-xs-3": "MuiGrid-spacing-xs-3",
          "spacing-xs-4": "MuiGrid-spacing-xs-4",
          "spacing-xs-5": "MuiGrid-spacing-xs-5",
          "spacing-xs-6": "MuiGrid-spacing-xs-6",
          "spacing-xs-7": "MuiGrid-spacing-xs-7",
          "spacing-xs-8": "MuiGrid-spacing-xs-8",
          "spacing-xs-9": "MuiGrid-spacing-xs-9",
          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
          "zeroMinWidth": "MuiGrid-zeroMinWidth",
        }
      }
      container={true}
    >
      <div
        className="MuiGrid-root makeStyles-textFieldGrid-4 MuiGrid-container"
      >
        <WithStyles(ForwardRef(Grid))
          className="makeStyles-title-3"
          container={true}
          item={true}
          xs={12}
        >
          <ForwardRef(Grid)
            className="makeStyles-title-3"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            container={true}
            item={true}
            xs={12}
          >
            <div
              className="MuiGrid-root makeStyles-title-3 MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12"
            >
              <WithStyles(ForwardRef(Typography))
                style={
                  Object {
                    "color": "#257AAA",
                  }
                }
                variant="h6"
              >
                <ForwardRef(Typography)
                  classes={
                    Object {
                      "alignCenter": "MuiTypography-alignCenter",
                      "alignJustify": "MuiTypography-alignJustify",
                      "alignLeft": "MuiTypography-alignLeft",
                      "alignRight": "MuiTypography-alignRight",
                      "body1": "MuiTypography-body1",
                      "body2": "MuiTypography-body2",
                      "button": "MuiTypography-button",
                      "caption": "MuiTypography-caption",
                      "colorError": "MuiTypography-colorError",
                      "colorInherit": "MuiTypography-colorInherit",
                      "colorPrimary": "MuiTypography-colorPrimary",
                      "colorSecondary": "MuiTypography-colorSecondary",
                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                      "displayBlock": "MuiTypography-displayBlock",
                      "displayInline": "MuiTypography-displayInline",
                      "gutterBottom": "MuiTypography-gutterBottom",
                      "h1": "MuiTypography-h1",
                      "h2": "MuiTypography-h2",
                      "h3": "MuiTypography-h3",
                      "h4": "MuiTypography-h4",
                      "h5": "MuiTypography-h5",
                      "h6": "MuiTypography-h6",
                      "noWrap": "MuiTypography-noWrap",
                      "overline": "MuiTypography-overline",
                      "paragraph": "MuiTypography-paragraph",
                      "root": "MuiTypography-root",
                      "srOnly": "MuiTypography-srOnly",
                      "subtitle1": "MuiTypography-subtitle1",
                      "subtitle2": "MuiTypography-subtitle2",
                    }
                  }
                  style={
                    Object {
                      "color": "#257AAA",
                    }
                  }
                  variant="h6"
                >
                  <h6
                    className="MuiTypography-root MuiTypography-h6"
                    style={
                      Object {
                        "color": "#257AAA",
                      }
                    }
                  >
                    Please add a reason of travel:
                  </h6>
                </ForwardRef(Typography)>
              </WithStyles(ForwardRef(Typography))>
              <WithStyles(ForwardRef(Divider))
                style={
                  Object {
                    "width": "50%",
                  }
                }
              >
                <ForwardRef(Divider)
                  classes={
                    Object {
                      "absolute": "MuiDivider-absolute",
                      "flexItem": "MuiDivider-flexItem",
                      "inset": "MuiDivider-inset",
                      "light": "MuiDivider-light",
                      "middle": "MuiDivider-middle",
                      "root": "MuiDivider-root",
                      "vertical": "MuiDivider-vertical",
                    }
                  }
                  style={
                    Object {
                      "width": "50%",
                    }
                  }
                >
                  <hr
                    className="MuiDivider-root"
                    style={
                      Object {
                        "width": "50%",
                      }
                    }
                  />
                </ForwardRef(Divider)>
              </WithStyles(ForwardRef(Divider))>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(TextField))
          className="makeStyles-textField-7"
          label="Please add the reason of travel"
          multiline={true}
          onChange={[Function]}
          placeholder="Please add a reason of travel"
          rows={10}
          value="zfsefewfewfew"
          variant="outlined"
        >
          <ForwardRef(TextField)
            className="makeStyles-textField-7"
            classes={
              Object {
                "root": "MuiTextField-root",
              }
            }
            label="Please add the reason of travel"
            multiline={true}
            onChange={[Function]}
            placeholder="Please add a reason of travel"
            rows={10}
            value="zfsefewfewfew"
            variant="outlined"
          >
            <WithStyles(ForwardRef(FormControl))
              className="MuiTextField-root makeStyles-textField-7"
              color="primary"
              disabled={false}
              error={false}
              fullWidth={false}
              required={false}
              variant="outlined"
            >
              <ForwardRef(FormControl)
                className="MuiTextField-root makeStyles-textField-7"
                classes={
                  Object {
                    "fullWidth": "MuiFormControl-fullWidth",
                    "marginDense": "MuiFormControl-marginDense",
                    "marginNormal": "MuiFormControl-marginNormal",
                    "root": "MuiFormControl-root",
                  }
                }
                color="primary"
                disabled={false}
                error={false}
                fullWidth={false}
                required={false}
                variant="outlined"
              >
                <div
                  className="MuiFormControl-root MuiTextField-root makeStyles-textField-7"
                >
                  <WithStyles(ForwardRef(InputLabel))>
                    <ForwardRef(InputLabel)
                      classes={
                        Object {
                          "animated": "MuiInputLabel-animated",
                          "asterisk": "MuiInputLabel-asterisk",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "filled": "MuiInputLabel-filled",
                          "focused": "Mui-focused",
                          "formControl": "MuiInputLabel-formControl",
                          "marginDense": "MuiInputLabel-marginDense",
                          "outlined": "MuiInputLabel-outlined",
                          "required": "Mui-required",
                          "root": "MuiInputLabel-root",
                          "shrink": "MuiInputLabel-shrink",
                        }
                      }
                    >
                      <WithStyles(ForwardRef(FormLabel))
                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                        classes={
                          Object {
                            "asterisk": "MuiInputLabel-asterisk",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "required": "Mui-required",
                          }
                        }
                        data-shrink={true}
                      >
                        <ForwardRef(FormLabel)
                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                          classes={
                            Object {
                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                              "colorSecondary": "MuiFormLabel-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "filled": "MuiFormLabel-filled",
                              "focused": "Mui-focused Mui-focused",
                              "required": "Mui-required Mui-required",
                              "root": "MuiFormLabel-root",
                            }
                          }
                          data-shrink={true}
                        >
                          <label
                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                            data-shrink={true}
                          >
                            Please add the reason of travel
                          </label>
                        </ForwardRef(FormLabel)>
                      </WithStyles(ForwardRef(FormLabel))>
                    </ForwardRef(InputLabel)>
                  </WithStyles(ForwardRef(InputLabel))>
                  <WithStyles(ForwardRef(OutlinedInput))
                    autoFocus={false}
                    fullWidth={false}
                    label={
                      <React.Fragment>
                        Please add the reason of travel
                      </React.Fragment>
                    }
                    multiline={true}
                    onChange={[Function]}
                    placeholder="Please add a reason of travel"
                    rows={10}
                    value="zfsefewfewfew"
                  >
                    <ForwardRef(OutlinedInput)
                      autoFocus={false}
                      classes={
                        Object {
                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "input": "MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                          "marginDense": "MuiOutlinedInput-marginDense",
                          "multiline": "MuiOutlinedInput-multiline",
                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                          "root": "MuiOutlinedInput-root",
                        }
                      }
                      fullWidth={false}
                      label={
                        <React.Fragment>
                          Please add the reason of travel
                        </React.Fragment>
                      }
                      multiline={true}
                      onChange={[Function]}
                      placeholder="Please add a reason of travel"
                      rows={10}
                      value="zfsefewfewfew"
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoFocus={false}
                        classes={
                          Object {
                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                            "adornedStart": "MuiOutlinedInput-adornedStart",
                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "input": "MuiOutlinedInput-input",
                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                            "marginDense": "MuiOutlinedInput-marginDense",
                            "multiline": "MuiOutlinedInput-multiline",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        fullWidth={false}
                        inputComponent="input"
                        multiline={true}
                        onChange={[Function]}
                        placeholder="Please add a reason of travel"
                        renderSuffix={[Function]}
                        rows={10}
                        type="text"
                        value="zfsefewfewfew"
                      >
                        <ForwardRef(InputBase)
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused",
                              "formControl": "MuiInputBase-formControl",
                              "fullWidth": "MuiInputBase-fullWidth",
                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                            }
                          }
                          fullWidth={false}
                          inputComponent="input"
                          multiline={true}
                          onChange={[Function]}
                          placeholder="Please add a reason of travel"
                          renderSuffix={[Function]}
                          rows={10}
                          type="text"
                          value="zfsefewfewfew"
                        >
                          <div
                            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl MuiInputBase-multiline MuiOutlinedInput-multiline"
                            onClick={[Function]}
                          >
                            <textarea
                              aria-invalid={false}
                              autoFocus={false}
                              className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline"
                              disabled={false}
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              placeholder="Please add a reason of travel"
                              required={false}
                              rows={10}
                              value="zfsefewfewfew"
                            />
                            <WithStyles(ForwardRef(NotchedOutline))
                              className="MuiOutlinedInput-notchedOutline"
                              label={
                                <React.Fragment>
                                  Please add the reason of travel
                                </React.Fragment>
                              }
                              labelWidth={0}
                              notched={true}
                            >
                              <ForwardRef(NotchedOutline)
                                className="MuiOutlinedInput-notchedOutline"
                                classes={
                                  Object {
                                    "legend": "PrivateNotchedOutline-legend-9",
                                    "legendLabelled": "PrivateNotchedOutline-legendLabelled-10",
                                    "legendNotched": "PrivateNotchedOutline-legendNotched-11",
                                    "root": "PrivateNotchedOutline-root-8",
                                  }
                                }
                                label={
                                  <React.Fragment>
                                    Please add the reason of travel
                                  </React.Fragment>
                                }
                                labelWidth={0}
                                notched={true}
                              >
                                <fieldset
                                  aria-hidden={true}
                                  className="PrivateNotchedOutline-root-8 MuiOutlinedInput-notchedOutline"
                                >
                                  <legend
                                    className="PrivateNotchedOutline-legendLabelled-10 PrivateNotchedOutline-legendNotched-11"
                                  >
                                    <span>
                                      Please add the reason of travel
                                    </span>
                                  </legend>
                                </fieldset>
                              </ForwardRef(NotchedOutline)>
                            </WithStyles(ForwardRef(NotchedOutline))>
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(OutlinedInput)>
                  </WithStyles(ForwardRef(OutlinedInput))>
                </div>
              </ForwardRef(FormControl)>
            </WithStyles(ForwardRef(FormControl))>
          </ForwardRef(TextField)>
        </WithStyles(ForwardRef(TextField))>
      </div>
    </ForwardRef(Grid)>
  </WithStyles(ForwardRef(Grid))>
</AddTravelReason>
`;
